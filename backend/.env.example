# Backend Environment Variables

# Environment
ENVIRONMENT=development
DEBUG=True

# Database
DATABASE_PATH=../data/fluxion_production.db

# API Configuration
API_URL=http://localhost:8001
DOMAIN=localhost

# CORS Origins (development)
CORS_ORIGINS=http://localhost:3001,http://localhost:5173,http://127.0.0.1:3001,http://127.0.0.1:5173

# Production Configuration (uncomment for production)
# ENVIRONMENT=production
# DEBUG=False
# API_URL=https://api.fluxionia.co
# DOMAIN=fluxionia.co
# CORS_ALLOW_PATTERN=^https:\/\/([a-z0-9-]+\.)?fluxionia\.co$

# Multi-Tenant Configuration
ALLOWED_TENANTS=granja,cliente2,admin

# Sentry Configuration
# Get your DSN from: https://sentry.io/settings/[org]/projects/[project]/keys/
SENTRY_DSN=https://your-sentry-dsn@sentry.io/your-project-id
SENTRY_ENVIRONMENT=development  # development, staging, production
SENTRY_TRACES_SAMPLE_RATE=0.1  # 0.0 to 1.0 (percentage of transactions to sample)

# SQL Server (for ETL)
SQL_SERVER_HOST=
SQL_SERVER_PORT=1433
SQL_SERVER_USER=
SQL_SERVER_PASSWORD=
SQL_SERVER_DATABASE=

# JWT Secret (generate with: openssl rand -hex 32)
JWT_SECRET_KEY=change-this-in-production
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# AWS Configuration (for production ETL)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_DEFAULT_REGION=us-east-1

# AWS Secrets Manager (RECOMMENDED FOR PRODUCTION)
# Set this to fetch secrets from AWS Secrets Manager
# If set, sensitive values will be fetched from AWS instead of env vars
# AWS_SECRET_NAME=fluxion/production

# SendGrid Email Notifications
# Get API Key from: https://app.sendgrid.com/settings/api_keys
# IMPORTANT: Store this in AWS Secrets Manager for production!
SENDGRID_API_KEY=
SENDGRID_FROM_EMAIL=notificaciones@fluxionia.co
NOTIFICATION_EMAILS=your-email@example.com

# ECS Configuration (for production ETL scheduler)
# ECS_CLUSTER_NAME=fluxion-cluster
# ECS_TASK_DEFINITION_ARN=
# ECS_SUBNET_IDS=
# ECS_SECURITY_GROUP_IDS=

# ============================================================================
# AWS SECRETS MANAGER SETUP (Production Best Practice)
# ============================================================================
# For production environments, use AWS Secrets Manager to store sensitive data:
#
# 1. Create a new secret:
#    python store_secret.py create fluxion/production
#
# 2. Update secret values:
#    python store_secret.py update fluxion/production SENDGRID_API_KEY "SG.your-key"
#    python store_secret.py update fluxion/production JWT_SECRET_KEY "$(openssl rand -hex 32)"
#    python store_secret.py update fluxion/production SQL_SERVER_PASSWORD "your-password"
#
# 3. Configure your application to use the secret:
#    export AWS_SECRET_NAME=fluxion/production
#
# 4. The backend will automatically fetch secrets from AWS Secrets Manager
#
# See backend/secrets_manager.py for implementation details
